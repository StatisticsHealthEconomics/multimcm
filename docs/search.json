[{"path":"/articles/cgd_analysis.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Chronic granulomatous disease (CGD) analysis","text":"analysis comparison frequentist analysis Lai Yau (2009).","code":""},{"path":"/articles/cgd_analysis.html","id":"data","dir":"Articles","previous_headings":"","what":"Data","title":"Chronic granulomatous disease (CGD) analysis","text":"data chronic granulomatous disease (CGD) data available part {frailtyHL} package Fleming Harrington (1991). package help documents CGD data set Fleming Harrington (1991) placebo-controlled randomized trial gamma interferon chronic granulomatous disease. total, 128 patients 13 hospitals followed 1 year. number patients per hospital ranged 4 26. patient may experience one infection. survival times (times--event) times recurrent CGD infections patient (.e. gap times). Censoring occurred last observation patients, except one, experienced serious infection date left study. Create new variable duration event. data set repeat measurements recurrent infections currently implemented {multimcm} simplicity ’ll remove data initial analyses. Lai Yau (2009) hospital-level random effects assigned cured probability part, patient- hospital-level random effects assigned hazard function part. {multimcm} currently applies hierarchical structure cure fraction separate hazards. Take first event individual start time. full data set also 13 hospitals/centers select smaller number: Drop levels appeared data ’ve just removed convert variables numeric factor unique categorical data, respectively. Next, append background hazard rate age, sex country. rare available website (2020). read local package {bgfscure} simplicity. Next, need harmonise country names associated cities. join data background mortality data according age, sex country. Creating input_data last step data wrangling. can now proceed mixture cure modelling analysis.","code":"data(cgd) head(cgd) cgd <- mutate(cgd, time = tstop - tstart) # center_id = as.numeric(as.factor(center)) cgd_first <-   cgd |>    group_by(id) |>    arrange(tstart) |>    filter(row_number() == 1) cgd_center <- cgd_first |>   filter(center %in% c(\"Amsterdam\", \"NIH\", \"Univ. of Zurich\", \"Scripps Institute\")) |>   droplevels() |>    mutate(center_id = as.numeric(center),          hos.cat_id = as.numeric(hos.cat),          sex_id = as.factor(as.numeric(sex))) # WHO background mortality data load(here::here(\"../bgfscure/data/bg.mortality.RData\"))  # bg.mortality  cgd_center <-   cgd_center |>   tidyr::separate(hos.cat, c(\"country\", \"hospital\"),                   remove = FALSE) |>    mutate(country = toupper(country),          age_event = round(age + time/365.25, 0),   # convert from days to years          country = ifelse(center == \"Amsterdam\", \"NETHERLANDS\",                           ifelse(center == \"Univ. of Zurich\", \"SWITZERLAND\",                                  ifelse(center == \"Copenhagen\", \"DENMARK\", country)))) |>    select(-hospital)  # harmonise fields bg.mortality <- bg.mortality |>    mutate(ACOUNTRY = toupper(ACOUNTRY),          ACOUNTRY = ifelse(ACOUNTRY == \"UNITED STATES\", \"US\", ACOUNTRY),          SEX = ifelse(SEX == \"M\", \"male\", \"female\"),          rate = ifelse(rate == 0, 1e-10, rate)) |>  # replace so >0   rename(country = ACOUNTRY,          sex = SEX,          age_event = Age)  input_data <- merge(cgd_center, bg.mortality,                     by = c(\"age_event\", \"sex\", \"country\"), sort = FALSE)"},{"path":[]},{"path":"/articles/cgd_analysis.html","id":"by-center","dir":"Articles","previous_headings":"Analysis","what":"By center","title":"Chronic granulomatous disease (CGD) analysis","text":"covariates latent model incidence (cure) model $$ T \\sim \\text{Exp}(\\lambda)\\\\ \\pi_i = \\text{logit}^{-1}(\\alpha + \\beta_{\\text{treat}[]} + \\gamma_{\\text{center}[]})\\\\ \\gamma_{\\text{center}[]} \\sim N(\\mu_{\\text{center}}, \\sigma^2_{\\text{center}}) $$ Alternatively, can pass precompiled model, rather model compiled time fitting. Now, load back compiled model fit . can using cmdstanr model, rather rstan model. benefits terms speed, reliability memory usage. Firstly non-compiled model, set use_cmdstanr = TRUE argument. Secondly, can pass precompiled cmdstanr model. saves .exe file stan folder. load back compiled model fit .","code":"out <-   bmcm_stan(     input_data = input_data,     formula = \"Surv(time=time, event=status) ~ 1\",     cureformula = \"~ treat + (1 | center_id)\",     family_latent = \"exponential\",     centre_coefs = TRUE,     bg_model = \"bg_fixed\",     bg_varname = \"rate\",     bg_hr = 1,     t_max = 400) model_nm <- \"precompiled_stan_model\"  # create the precompiled model and save as .RDS file precompile_bmcm_model(input_data = input_data,                       cureformula =  \"~ treat + (1 | center_id)\",                       family_latent = \"exponential\",                       model_name = model_nm) model_path <- glue::glue(\"{system.file('stan', package = 'multimcm')}/{model_nm}.RDS\")  out_precompiled <-   bmcm_stan(     input_data = input_data,     formula = \"Surv(time=time, event=status) ~ 1\",     cureformula = \"~ treat + (1 | center_id)\",     family_latent = \"exponential\",     centre_coefs = TRUE,     bg_model = \"bg_fixed\",     bg_varname = \"rate\",     bg_hr = 1,     t_max = 400,     precompiled_model_path = model_path) out <-   bmcm_stan(     input_data = input_data,     formula = \"Surv(time=time, event=status) ~ 1\",     cureformula = \"~ treat + (1 | center_id)\",     family_latent = \"exponential\",     centre_coefs = TRUE,     bg_model = \"bg_fixed\",     bg_varname = \"rate\",     bg_hr = 1,     t_max = 400,     use_cmdstanr = TRUE)  # so that plotting functions work later # convert cmdstanr object to rstan stanfit format  ##TODO: error. for some reason save_warmup is NA?... # out$output <- rstan::read_stan_csv(out$output$output_files()) model_nm <- \"precompiled_stan_model\"  precompile_bmcm_model(input_data = input_data,                       cureformula =  \"~ treat + (1 | center_id)\",                       family_latent = \"exponential\",                       model_name = model_nm,                       use_cmdstanr = TRUE) model_path <- glue::glue(\"{system.file('stan', package = 'multimcm')}/{model_nm}.exe\")  out_precompiled <-   bmcm_stan(     input_data = input_data,     formula = \"Surv(time=time, event=status) ~ 1\",     cureformula = \"~ treat + (1 | center_id)\",     family_latent = \"exponential\",     centre_coefs = TRUE,     bg_model = \"bg_fixed\",     bg_varname = \"rate\",     bg_hr = 1,     t_max = 400,     precompiled_model_path = model_path,     use_cmdstanr = TRUE)  ##TODO: # out_precompiled$output <- #   rstan::read_stan_csv(out_precompiled$output$output_files())"},{"path":"/articles/cgd_analysis.html","id":"separate-models","dir":"Articles","previous_headings":"Analysis > By center","what":"Separate models","title":"Chronic granulomatous disease (CGD) analysis","text":"can also fit end-points separately changing cureformula argument formula without random effect term ~ treat + center_id.","code":"stan_model <-    precompile_bmcm_model(input_data = input_data,                         cureformula =  \"~ treat + center_id\",                         family_latent = \"exponential\",                         model_name = \"precompiled_stan_model\",                         use_cmdstanr = TRUE)  model_path <- stan_model$exe_file()  out_precompiled_separate <-   bmcm_stan(     input_data = input_data,     formula = \"Surv(time=time, event=status) ~ 1\",     cureformula = \"~ treat + center_id\",     family_latent = \"exponential\",     centre_coefs = TRUE,     bg_model = \"bg_fixed\",     bg_varname = \"rate\",     bg_hr = 1,     t_max = 400,     precompiled_model_path = model_path,     use_cmdstanr = TRUE)"},{"path":"/articles/cgd_analysis.html","id":"by-hospital-category","dir":"Articles","previous_headings":"Analysis","what":"By hospital category","title":"Chronic granulomatous disease (CGD) analysis","text":"covariates latent model incidence (cure) model $$ T \\sim \\text{Exp}(\\lambda)\\\\ \\pi_i = \\text{logit}^{-1}(\\alpha + \\beta_{\\text{treat}[]} + \\gamma_{\\text{cat}[]})\\\\ \\gamma_{\\text{cat}[]} \\sim N(\\mu_{\\text{cat}}, \\sigma^2_{\\text{cat}}) $$","code":"out_hos.cat <-   bmcm_stan(     input_data = input_data,     formula = \"Surv(time=time, event=status) ~ 1\",     cureformula = \"~ treat + (1 | hos.cat_id)\",     family_latent = \"exponential\",     centre_coefs = TRUE,     bg_model = \"bg_fixed\",     bg_varname = \"rate\",     bg_hr = 1,     t_max = 365)"},{"path":"/articles/cgd_analysis.html","id":"with-sex-covariate-in-latent-model","dir":"Articles","previous_headings":"Analysis","what":"With sex covariate in latent model","title":"Chronic granulomatous disease (CGD) analysis","text":"covariates latent model incidence (cure) model $$ T \\sim \\text{Exp}(\\lambda_i)\\\\ \\log(\\lambda_i) = \\alpha_{\\lambda} + \\beta_{\\text{sex}[]}\\\\ \\pi_i = \\text{logit}^{-1}(\\alpha_{\\pi} + \\beta_{\\text{treat}[]} + \\gamma_{\\text{center}[]})\\\\ \\gamma_{\\text{center}[]} \\sim N(\\mu_{\\text{center}}, \\sigma^2_{\\text{center}}) $$","code":"out_sex <-   bmcm_stan(     input_data = input_data,     formula = \"Surv(time=time, event=status) ~ sex\",     cureformula = \"~ treat + (1 | hos.cat_id)\",     family_latent = \"exponential\",     bg_model = \"bg_fixed\",     bg_varname = \"rate\",     bg_hr = 1,     t_max = 365)"},{"path":"/articles/cgd_analysis.html","id":"plots","dir":"Articles","previous_headings":"Analysis","what":"Plots","title":"Chronic granulomatous disease (CGD) analysis","text":"fitting models, can plot survival curves .","code":"library(ggplot2)"},{"path":"/articles/cgd_analysis.html","id":"main-models","dir":"Articles","previous_headings":"Analysis > Plots","what":"Main models","title":"Chronic granulomatous disease (CGD) analysis","text":"Hierarchy center_id. Hierarchy center_id precompiled stan model. ! Separate models, .e fixed effect center_id. TODO: DOESNT LOOK RIGHT","code":"gg <- plot_S_joint(out,                    add_km = TRUE,                    annot_cf = FALSE) gg + xlim(0,365) + facet_wrap(~endpoint)"},{"path":"/articles/cgd_analysis.html","id":"by-center-1","dir":"Articles","previous_headings":"Analysis > Plots","what":"By center","title":"Chronic granulomatous disease (CGD) analysis","text":"","code":"gg2 <- plot_S_joint(out_hos.cat,                     add_km = TRUE,                     annot_cf = FALSE) gg2 + xlim(0,365) + facet_wrap(~endpoint) gg3 <- plot_S_joint(out_sex,                     add_km = TRUE,                     annot_cf = FALSE) gg3 + xlim(0,365) + facet_wrap(~endpoint)"},{"path":[]},{"path":[]},{"path":"/articles/how_to_use.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"How to use multimcm","text":"quick start, basic introduction use multimcm fit Bayesian mixture cure models Stan.","code":""},{"path":"/articles/how_to_use.html","id":"data","dir":"Articles","previous_headings":"","what":"Data","title":"How to use multimcm","text":"use xxx data set. data already arranged correct format saved within package can load follows. want load data set directly can use Required fields include event times (os, pfs) censoring indicators (os_event, pfs_event) OS PFS. also treatment label column (TRTA). Additional patient-level covariates can also included. present age event (OSage, PFSage) used. looks like .","code":"data(\"surv_input_data\", package = \"rstanbmcm\") head(surv_input_data)"},{"path":"/articles/how_to_use.html","id":"example","dir":"Articles","previous_headings":"","what":"Example","title":"How to use multimcm","text":"First , attach libraries going need. demonstration purposes select single treatment fit Exponential distributions OS PFS. use Stan engine set options use --one available cores -write pre-complied code. Now ready model fitting using bmcm_stan(). Key arguments formula cureformula. define two levels observed (incidence) latent model, respectively. employ standard R formula syntax; formula using survival regression syntax mixed effect syntax cureformula. arguments can set default values. bg_model background model. current options Exponential distribution (1) empirical point estimates life-tables (2). former function uses default prior. remaining arguments passed directly Stan engine HMC.","code":"library(purrr) library(reshape2) library(dplyr) library(rstan) library(shinystan) library(dplyr) library(ggplot2) i <-  \"exp\" k <- \"exp\" j <- \"IPILIMUMAB\" rstan::rstan_options(auto_write = TRUE) options(mc.cores = parallel::detectCores() - 1) out <-   bmcm_stan(     input_data = input_data,     formula = \"Surv(time=time, event=status) ~ 1\",     cureformula = \"~ treat + (1 | center_id)\",     family_latent = \"exponential\",     # prior_cure = NA,     centre_coefs = TRUE,     bg_model = \"bg_fixed\",     bg_varname = \"rate\",     bg_hr = 1,     t_max = 400)"},{"path":"/articles/how_to_use.html","id":"results","dir":"Articles","previous_headings":"","what":"Results","title":"How to use multimcm","text":"several good packages available view Stan output, including shinystan coda. give basic output specific multimcm.","code":""},{"path":"/articles/how_to_use.html","id":"output-data","dir":"Articles","previous_headings":"Results","what":"Output data","title":"How to use multimcm","text":"can view raw output running Stan model using available posterior samples Parameters prefixed p prior predicted distribution samples. Parameters prefixed lp_ (except lp__) linear predictors used Exponential distributions rate parameters lambda_.","code":"res <- extract(stan_exp_exp_IPI) names(res)"},{"path":"/articles/how_to_use.html","id":"plots","dir":"Articles","previous_headings":"Results","what":"Plots","title":"How to use multimcm","text":"function plot_S_joint() takes list multiple Stan runs creates ggplot2 grid object survival curves cured, uncured mixed 95% credible intervals. example simply create list one element. addition, overlay Kaplan-Meier curves original data using survival package. Note always slightly different since trial case-mix posterior survival curves average patient.","code":"stan_list <- list(\"IPILIMUMAB\" = stan_exp_exp_IPI) gg <- plot_S_joint(stan_list = stan_list) library(survival)  trta <- \"IPILIMUMAB\" fit_os <- survfit(Surv(os, os_event) ~ 1,                   data = filter(surv_input_data, TRTA == trta)) fit_pfs <- survfit(Surv(pfs, pfs_event) ~ 1,                    data = filter(surv_input_data, TRTA == trta)) km_data <-   rbind(     data.frame(Tx = trta,                event_type = \"os\",                time = fit_os$time,                surv = fit_os$surv),     data.frame(Tx = trta,                event_type = \"pfs\",                time = fit_pfs$time,                surv = fit_pfs$surv))  gg + geom_line(aes(x = time, y = surv),                data = km_data,                lwd = 1,                inherit.aes = FALSE) +   xlim(0, 60) + ylim(0, 1)"},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Nathan Green. Author, maintainer.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Green N (2025). multimcm: Bayesian Relative Mixture Cure Modelling. R package version 0.0.1.","code":"@Manual{,   title = {multimcm: Bayesian Relative Mixture Cure Modelling},   author = {Nathan Green},   year = {2025},   note = {R package version 0.0.1}, }"},{"path":[]},{"path":"/index.html","id":"overview","dir":"","previous_headings":"","what":"Overview","title":"Bayesian Relative Mixture Cure Modelling","text":"goal multimcm jointly model multiple event time distributions (e.g. time disease progression (PFS) time death (OS)) within Bayesian relative survival mixture cure model framework, using Stan engine called R. package particularly useful health economics oncology research, enabling users model dependencies event times make better-informed inferences decisions.","code":""},{"path":"/index.html","id":"features","dir":"","previous_headings":"","what":"Features","title":"Bayesian Relative Mixture Cure Modelling","text":"Bayesian Mixture Cure Modeling: Analyze event time distributions focus cure modeling. Joint Modeling Event Times: Account dependencies progression-free survival (PFS) overall survival (OS). Stan Integration: Leverage power Stan Bayesian inference. Health Economics Applications: Designed use oncology domains requiring relative survival analysis. R Interface: Easy--use R-based interface statistical modeling.","code":""},{"path":"/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Bayesian Relative Mixture Cure Modelling","text":"can install development version GitHub :","code":"# install.packages(\"remotes\")  # if you don't already have it remotes::install_github(\"StatisticsHealthEconomics/multimcm\")"},{"path":"/index.html","id":"motivation","dir":"","previous_headings":"","what":"Motivation","title":"Bayesian Relative Mixture Cure Modelling","text":"Mixture cure models increasingly popular health problems particular oncology. Bayesian paradigm allows explicitly incorporation uncertainties principled synthesis prior knowledge via expert elicitation previous trials. extending current methods account dependence event times leverage additional information make better inferences decisions.","code":""},{"path":"/index.html","id":"contributing","dir":"","previous_headings":"","what":"Contributing","title":"Bayesian Relative Mixture Cure Modelling","text":"Contributions multimcm welcome! Please adhere Contributor Code Conduct contributing project. contribute: 1. Fork repository. 2. Create feature branch (git checkout -b feature-name). 3. Commit changes (git commit -m \"Add feature\"). 4. Push branch (git push origin feature-name). 5. Open pull request.","code":""},{"path":"/index.html","id":"license","dir":"","previous_headings":"","what":"License","title":"Bayesian Relative Mixture Cure Modelling","text":"project licensed MIT License. See LICENSE file details.","code":""},{"path":"/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2024 multimcm authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"/reference/bmcm_stan.html","id":null,"dir":"Reference","previous_headings":"","what":"bmcm_stan — bmcm_stan","title":"bmcm_stan — bmcm_stan","text":"jointly estimate treatments generate Stan code","code":""},{"path":"/reference/bmcm_stan.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"bmcm_stan — bmcm_stan","text":"","code":"bmcm_stan(   input_data,   formula,   cureformula = ~1,   family_latent = \"exponential\",   prior_latent = NA,   prior_cure = list(),   centre_coefs = FALSE,   bg_model = c(\"bg_distn\", \"bg_fixed\"),   bg_varname = \"bg_rate\",   bg_hr = 1,   t_max = 70,   save_stan_code = FALSE,   read_stan_code = FALSE,   precompiled_model_path = NA,   use_cmdstanr = FALSE,   ... )"},{"path":"/reference/bmcm_stan.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"bmcm_stan — bmcm_stan","text":"input_data Long format data frame formula R formula object latent model component cureformula R formula object cure fraction model component family_latent Name distribution, \"exp\", \"weibull\", \"gompertz\", \"lognormal\", \"loglogistic\", \"gengamma\". Single string vector length number end-points prior_latent Optional prior_cure Optional centre_coefs Logical bg_model User supplied distribution estimated. future probabilities fitted model object. bg_varname Background variable name input_data bg_hr Background hazard ratio adjustment t_max Maximum time horizon precompiled_model_path Path precompiled model, Default NA use_cmdstanr Logical. TRUE, use cmdstanr fit model. Default FALSE. ... Additional parameters pass Stan sampler","code":""},{"path":"/reference/bmcm_stan.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"bmcm_stan — bmcm_stan","text":"Stan output bmcm class","code":""},{"path":"/reference/cf_forest_cutpoint.html","id":null,"dir":"Reference","previous_headings":"","what":"Cure fraction forest plot using cut-point Stan output — cf_forest_cutpoint","title":"Cure fraction forest plot using cut-point Stan output — cf_forest_cutpoint","text":"Using treatment Stan model.","code":""},{"path":"/reference/cf_forest_cutpoint.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cure fraction forest plot using cut-point Stan output — cf_forest_cutpoint","text":"","code":"cf_forest_cutpoint(   distns = list(c(\"exp\", \"exp\"), c(\"lognormal\", \"lognormal\")),   folder = NA,   save_name = c(\"_12\", \"_30\", \"_100\"),   is_hier = TRUE )"},{"path":"/reference/cf_forest_cutpoint.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cure fraction forest plot using cut-point Stan output — cf_forest_cutpoint","text":"folder String location read data save_name File name appended text is_hier hierarchical model (separate)? .e. whether use global parameter","code":""},{"path":"/reference/cf_forest_cutpoint.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Cure fraction forest plot using cut-point Stan output — cf_forest_cutpoint","text":"","code":"if (FALSE) { # \\dontrun{  # independent model  fp_sep <- cf_forest_cutpoint(folder = \"data/dbl_cut/separate\", save_name = c(\"_30\", \"_12\", \"_100\"))  #ggsave(fp_sep, filename = \"plots/forest_plot_cf_sep_cpt.png\", dpi = 640, width = 16, height = 14)   # hierarchical model  fp_hier <- cf_forest_cutpoint(folder = \"data/dbl_cut/hier\", save_name = c(\"_30\", \"_12\", \"_100\"))  #ggsave(fp_hier, filename = \"plots/forest_plot_cf_hier_cpt.png\", dpi = 640, width = 16, height = 14) } # }"},{"path":"/reference/cf_forest_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Cure fraction forest plot using Stan output — cf_forest_plot","title":"Cure fraction forest plot using Stan output — cf_forest_plot","text":"Using treatment Stan model.","code":""},{"path":"/reference/cf_forest_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cure fraction forest plot using Stan output — cf_forest_plot","text":"","code":"cf_forest_plot(folder = \"data/\")"},{"path":"/reference/cf_forest_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cure fraction forest plot using Stan output — cf_forest_plot","text":"folder String location directory","code":""},{"path":"/reference/cf_forest_plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Cure fraction forest plot using Stan output — cf_forest_plot","text":"ggplot object","code":""},{"path":"/reference/cf_forest_plot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Cure fraction forest plot using Stan output — cf_forest_plot","text":"","code":"if (FALSE) { # \\dontrun{  # independent model  fp_sep <- cf_forest_plot(\"data/separate/\")  #ggsave(fp_sep, filename = \"plots/forest_plot_sep_multimcm.png\", dpi = 640, width = 12, height = 8)   # hierarchical model  fp_hier <- cf_forest_plot(\"data/\")  #ggsave(fp_hier, filename = \"plots/forest_plot_multimcm.png\", dpi = 640, width = 12, height = 8) } # }"},{"path":"/reference/cglue_data.html","id":null,"dir":"Reference","previous_headings":"","what":"collapse strings from glue_data — cglue_data","title":"collapse strings from glue_data — cglue_data","text":"collapse strings glue_data","code":""},{"path":"/reference/cglue_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"collapse strings from glue_data — cglue_data","text":"","code":"cglue_data(...)"},{"path":"/reference/create_stancode.html","id":null,"dir":"Reference","previous_headings":"","what":"Create Stan code from component parts — create_stancode","title":"Create Stan code from component parts — create_stancode","text":"Create Stan code component parts","code":""},{"path":"/reference/create_stancode.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create Stan code from component parts — create_stancode","text":"","code":"create_stancode(models)"},{"path":"/reference/create_stancode.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create Stan code from component parts — create_stancode","text":"models Vector survival model names","code":""},{"path":"/reference/create_stancode.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create Stan code from component parts — create_stancode","text":"string","code":""},{"path":[]},{"path":"/reference/create_stancode_postpred.html","id":null,"dir":"Reference","previous_headings":"","what":"Posterior prediction Stan code builder — create_stancode_postpred","title":"Posterior prediction Stan code builder — create_stancode_postpred","text":"Posterior prediction Stan code builder","code":""},{"path":"/reference/create_stancode_postpred.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Posterior prediction Stan code builder — create_stancode_postpred","text":"","code":"create_stancode_postpred(   models = c(\"exp\", \"weibull\", \"gompertz\", \"loglogistic\", \"lognormal\") )"},{"path":"/reference/default_prior_cure.html","id":null,"dir":"Reference","previous_headings":"","what":"Prepare shared parameters for Stan model — default_prior_cure","title":"Prepare shared parameters for Stan model — default_prior_cure","text":"Model parameters cure fraction, background generated.","code":""},{"path":"/reference/default_prior_cure.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prepare shared parameters for Stan model — default_prior_cure","text":"","code":"default_prior_cure(formula_cure, prior_cure = list(), bg_model = 2)"},{"path":"/reference/default_prior_cure.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prepare shared parameters for Stan model — default_prior_cure","text":"formula_cure Result parse_formula bg_model Background model index: exponential distribution fixed point values life-tables","code":""},{"path":"/reference/default_prior_cure.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prepare shared parameters for Stan model — default_prior_cure","text":"list","code":""},{"path":"/reference/geom_kaplan_meier.html","id":null,"dir":"Reference","previous_headings":"","what":"Geom for Kaplan-Meier ggplot — geom_kaplan_meier","title":"Geom for Kaplan-Meier ggplot — geom_kaplan_meier","text":"Geom Kaplan-Meier ggplot","code":""},{"path":"/reference/geom_kaplan_meier.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Geom for Kaplan-Meier ggplot — geom_kaplan_meier","text":"","code":"geom_kaplan_meier(out_dat, col = \"black\", add_marks = TRUE)"},{"path":"/reference/grid_arrange_shared_legend.html","id":null,"dir":"Reference","previous_headings":"","what":"Use single legend for grid of plots — grid_arrange_shared_legend","title":"Use single legend for grid of plots — grid_arrange_shared_legend","text":"https://cran.r-project.org/web/packages/egg/vignettes/Ecosystem.html","code":""},{"path":"/reference/grid_arrange_shared_legend.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Use single legend for grid of plots — grid_arrange_shared_legend","text":"","code":"grid_arrange_shared_legend(   ...,   ncol = length(list(...)),   nrow = 1,   position = c(\"bottom\", \"right\", \"top\") )"},{"path":"/reference/make_latent_model_code.html","id":null,"dir":"Reference","previous_headings":"","what":"Make_latent_model_code — make_latent_model_code","title":"Make_latent_model_code — make_latent_model_code","text":"Make_latent_model_code","code":""},{"path":"/reference/make_latent_model_code.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make_latent_model_code — make_latent_model_code","text":"","code":"make_latent_model_code(model, id = 1L)"},{"path":"/reference/make_latent_model_code.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Make_latent_model_code — make_latent_model_code","text":"","code":"lapply(make_latent_model_code(\"lognormal\"), cat) #> Error in make_latent_model_code(\"lognormal\"): could not find function \"make_latent_model_code\""},{"path":"/reference/parse_formula.html","id":null,"dir":"Reference","previous_headings":"","what":"Parse formula — parse_formula","title":"Parse formula — parse_formula","text":"Parse formula","code":""},{"path":"/reference/parse_formula.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parse formula — parse_formula","text":"","code":"parse_formula(formula, data, family = NA)"},{"path":"/reference/parse_formula.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parse formula — parse_formula","text":"family","code":""},{"path":"/reference/pars_format.html","id":null,"dir":"Reference","previous_headings":"","what":"Parse variables — pars_format","title":"Parse variables — pars_format","text":"Ensure consistent dimensions depending number covariates","code":""},{"path":"/reference/pars_format.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parse variables — pars_format","text":"","code":"pars_format(nvars)"},{"path":"/reference/plot_S_joint.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot survival curves for joint model and all treatments — plot_S_joint","title":"Plot survival curves for joint model and all treatments — plot_S_joint","text":"Use results running Stan bmcm_stan() relative survival joint mixture cure model.","code":""},{"path":"/reference/plot_S_joint.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot survival curves for joint model and all treatments — plot_S_joint","text":"","code":"plot_S_joint(   bmcm_out,   facet = TRUE,   annot_cf = FALSE,   add_km = FALSE,   add_marks = TRUE,   ... )"},{"path":"/reference/plot_S_joint.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot survival curves for joint model and all treatments — plot_S_joint","text":"facet Two separate plots end point overlaid? annot_cf Annotate cure fractions? Logical add_km Include Kaplan-Meier layer? Logical add_marks Kaplan-Meier censoring marks; logical ... Additional parameters bmcm class output list","code":""},{"path":"/reference/plot_S_joint.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot survival curves for joint model and all treatments — plot_S_joint","text":"ggplot object","code":""},{"path":"/reference/plot_S_joint.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot survival curves for joint model and all treatments — plot_S_joint","text":"","code":"load(\"data/file_names.RData\") #> Warning: cannot open compressed file 'data/file_names.RData', probable reason 'No such file or directory' #> Error in readChar(con, 5L, useBytes = TRUE): cannot open the connection"},{"path":"/reference/ppv_gen_quants_block.html","id":null,"dir":"Reference","previous_headings":"","what":"ppv_gen_quants_block(","title":"ppv_gen_quants_block(","text":"ppv_gen_quants_block(\"weibull\")","code":""},{"path":"/reference/ppv_gen_quants_block.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ppv_gen_quants_block(","text":"","code":"ppv_gen_quants_block(model, id = 1)"},{"path":"/reference/precompile_bmcm_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Precompile bmcm model — precompile_bmcm_model","title":"Precompile bmcm model — precompile_bmcm_model","text":"Precompile bmcm model","code":""},{"path":"/reference/precompile_bmcm_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Precompile bmcm model — precompile_bmcm_model","text":"","code":"precompile_bmcm_model(   input_data,   family_latent = \"exponential\",   cureformula = ~1,   model_name = NA,   use_cmdstanr = FALSE,   file_path = NA )"},{"path":"/reference/precompile_bmcm_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Precompile bmcm model — precompile_bmcm_model","text":"use_cmdstanr Logical. TRUE, use cmdstanr compile model. Default FALSE.","code":""},{"path":"/reference/prep_bg_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Prepare background data — prep_bg_data","title":"Prepare background data — prep_bg_data","text":"Background hazard point values.","code":""},{"path":"/reference/prep_bg_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prepare background data — prep_bg_data","text":"","code":"prep_bg_data(input_data, bg_varname, formula_cure, event_type, suffix = TRUE)"},{"path":"/reference/prep_bg_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prepare background data — prep_bg_data","text":"suffix","code":""},{"path":"/reference/prep_latent_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Prepare Stan data in latent model — prep_latent_data","title":"Prepare Stan data in latent model — prep_latent_data","text":"Data specific end type Stan input.","code":""},{"path":"/reference/prep_latent_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prepare Stan data in latent model — prep_latent_data","text":"","code":"prep_latent_data(   input_data,   formula_cure,   formula_latent,   event_type,   centre_coefs = FALSE,   suffix = TRUE )"},{"path":"/reference/prep_latent_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prepare Stan data in latent model — prep_latent_data","text":"formula_cure parsed formula formula_latent parsed formula event_type cluster/group centre_coefs Logical 1: Exponential distribution; 2: fixed point values life-table","code":""},{"path":"/reference/prep_latent_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prepare Stan data in latent model — prep_latent_data","text":"List consisting : sample size, times, censoring indicator, number covariates, covariates","code":""},{"path":"/reference/prep_stan_params.html","id":null,"dir":"Reference","previous_headings":"","what":"Default prior latent variable — prep_stan_params","title":"Default prior latent variable — prep_stan_params","text":"Default parameters survival model priors supplied.","code":""},{"path":"/reference/prep_stan_params.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Default prior latent variable — prep_stan_params","text":"","code":"default_prior_latent(formula_latent, formula_cure)"},{"path":"/reference/prep_stan_params.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Default prior latent variable — prep_stan_params","text":"hyper-parameters","code":""},{"path":"/reference/prep_S_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Prepare posterior survival data for plotting — prep_S_data","title":"Prepare posterior survival data for plotting — prep_S_data","text":"Prepare posterior survival data plotting","code":""},{"path":"/reference/prep_S_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prepare posterior survival data for plotting — prep_S_data","text":"","code":"prep_S_data(   stan_extract,   event_type = NA,   CI_probs = c(0.025, 0.5, 0.975),   tx_idx = NA )"},{"path":"/reference/prep_S_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prepare posterior survival data for plotting — prep_S_data","text":"dataframe","code":""},{"path":"/reference/prep_S_joint_data.bmcm.html","id":null,"dir":"Reference","previous_headings":"","what":"Prepare data for survival plot — prep_S_joint_data.bmcm","title":"Prepare data for survival plot — prep_S_joint_data.bmcm","text":"Prepare data survival plot","code":""},{"path":"/reference/prep_S_joint_data.bmcm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prepare data for survival plot — prep_S_joint_data.bmcm","text":"","code":"# S3 method for class 'bmcm' prep_S_joint_data(bmcm_out)"},{"path":"/reference/prep_S_joint_data.bmcm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prepare data for survival plot — prep_S_joint_data.bmcm","text":"bmcm_out Output Stan model","code":""},{"path":"/reference/prep_S_joint_data.bmcm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prepare data for survival plot — prep_S_joint_data.bmcm","text":"data frame","code":""},{"path":"/reference/prep_S_joint_data.default.html","id":null,"dir":"Reference","previous_headings":"","what":"already extracted matrix — prep_S_joint_data.default","title":"already extracted matrix — prep_S_joint_data.default","text":"already extracted matrix","code":""},{"path":"/reference/prep_S_joint_data.default.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"already extracted matrix — prep_S_joint_data.default","text":"","code":"# Default S3 method prep_S_joint_data(bmcm_out)"},{"path":"/reference/tp.html","id":null,"dir":"Reference","previous_headings":"","what":"from brms package — tp","title":"from brms package — tp","text":"brms package","code":""},{"path":"/reference/tp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"from brms package — tp","text":"","code":"tp(wsp = 2)"},{"path":"/reference/validate_distns.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate distribution — validate_distns","title":"Validate distribution — validate_distns","text":"Partial match start word.","code":""},{"path":"/reference/validate_distns.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate distribution — validate_distns","text":"","code":"validate_distns(model)"},{"path":"/news/index.html","id":"multimcm-001","dir":"Changelog","previous_headings":"","what":"multimcm 0.0.1","title":"multimcm 0.0.1","text":"Initial CRAN submission.","code":""}]
